{"version":3,"sources":["components/NavbarComponent.js","components/JumbotronComponent.js","components/TableComponent.js","containers/HomeContainer.js","actions/userActions.js","components/BackComponent.js","validations/UserValidation.js","components/FormComponent.js","containers/CreateUserContainer.js","containers/EditUserContainer.js","components/DetailUserComponent.js","containers/DetailUserContainer.js","App.js","serviceWorker.js","reducers/users.js","reducers/index.js","index.js"],"names":["NavbarComponent","props","useState","isOpen","setIsOpen","Navbar","color","light","expand","Container","NavbarBrand","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","href","NavbarText","JumbotronComponent","Jumbotron","SearchBar","Search","columns","dataField","text","sort","headerStyle","width","formatter","rowContent","row","to","id","Button","icon","faInfo","faEdit","faTrash","defaultSorted","order","connect","state","getUsersList","users","errorUsersList","bootstrap4","keyField","data","search","Row","Col","faUserPlus","searchProps","placeholder","baseProps","pagination","paginationFactory","Spinner","HomeContainer","this","dispatch","axios","get","then","response","type","payload","errorMessage","catch","error","message","Component","BackComponent","faArrowLeft","UserValidation","values","errors","nama","umur","alamat","nohp","renderField","input","label","disabled","readOnly","meta","touched","warning","md","Label","htmlFor","Input","style","FormComponent","onSubmit","handleSubmit","FormGroup","Field","name","component","submitting","reduxForm","form","validate","enableReinitialize","CreateUserContainer","post","console","log","postUserCreate","EditUserContainer","getUserDetail","errorUserDetail","Table","striped","DetailUserContainer","match","params","App","path","exact","Boolean","window","location","hostname","initialState","getResponDataUser","errorResponDataUser","action","combineReducers","formReducer","store","createStore","reducer","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5f019034.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  NavbarText,\r\n  Container\r\n} from 'reactstrap';\r\n\r\nconst NavbarComponent = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div>\r\n      <Navbar color=\"light\" light expand=\"md\">\r\n        <Container>\r\n        <NavbarBrand>Desa Ngasinan</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"mr-auto\" navbar>\r\n            <NavItem>\r\n              <NavLink href=\"/react-deploy\">Home</NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink href=\"https://desangasinan.com/profil-2/\">About us</NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n          <NavbarText>Admin</NavbarText>\r\n        </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavbarComponent;","import React from \"react\";\r\nimport { Jumbotron, Container } from \"reactstrap\";\r\n\r\nconst JumbotronComponent = (props) => {\r\n  return (\r\n    <div>\r\n      <Jumbotron>\r\n        <Container>\r\n          <h1 className=\"display-3\">Siaga COVID-19</h1>\r\n          <p className=\"lead\">\r\n            Pemerintah Desa Ngasinan Kecamatan Jetis Kabupaten Ponorogo\r\n          </p>\r\n          <hr className=\"my-2\" />\r\n          <p>\r\n            Program pendataan warga desa dari luar daerah, dalam penanganan COVID-19\r\n          </p>\r\n        </Container>\r\n      </Jumbotron>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JumbotronComponent;\r\n","import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Button, Row, Col, Spinner } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faInfo,\r\n  faEdit,\r\n  faTrash,\r\n  faUserPlus,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst columns = [\r\n  {\r\n    dataField: \"id\",\r\n    text: \"ID\",\r\n    sort: true,\r\n    headerStyle: () => {\r\n      return { width: \"5%\" };\r\n    },\r\n  },\r\n  {\r\n    dataField: \"nama\",\r\n    text: \"Nama\",\r\n    sort: true,\r\n  },\r\n  {\r\n    dataField: \"alamat\",\r\n    text: \"Alamat\",\r\n    sort: true,\r\n  },\r\n  {\r\n    dataField: \"link\",\r\n    text: \"Action\",\r\n    formatter: (rowContent, row) => {\r\n      return (\r\n        <div>\r\n          <Link to={\"detail/\" + row.id}>\r\n            <Button color=\"dark\" className=\"mr-2\">\r\n              <FontAwesomeIcon icon={faInfo} /> Detail\r\n            </Button>\r\n          </Link>\r\n          <Link to={\"edit/\" + row.id}>\r\n            <Button color=\"dark\" className=\"mr-2\">\r\n              <FontAwesomeIcon icon={faEdit} /> Edit\r\n            </Button>\r\n          </Link>\r\n          <Button color=\"dark\" className=\"mr-2\">\r\n            <FontAwesomeIcon icon={faTrash} /> Delete\r\n          </Button>\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"id\",\r\n    order: \"asc\",\r\n  },\r\n];\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getUsersList: state.users.getUsersList,\r\n    errorUsersList: state.users.errorUsersList,\r\n  };\r\n};\r\nconst TableComponent = (props) => {\r\n  return (\r\n    <Container>\r\n      {props.getUsersList ? (\r\n        <ToolkitProvider\r\n          bootstrap4\r\n          keyField=\"id\"\r\n          data={props.getUsersList}\r\n          columns={columns}\r\n          defaultSorted={defaultSorted}\r\n          search\r\n        >\r\n          {(props) => (\r\n            <div>\r\n              <Row>\r\n                <Col>\r\n                  <Link to=\"/create\">\r\n                    <Button color=\"dark\" className=\"mr-2\">\r\n                      <FontAwesomeIcon icon={faUserPlus} /> Tambah Data\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n                <Col>\r\n                  <div className=\"float-right\">\r\n                    <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n              <BootstrapTable\r\n                {...props.baseProps}\r\n                pagination={paginationFactory()}\r\n              />\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          {props.errorUsersList ? (\r\n            <h4>{props.errorUsersList}</h4>\r\n          ) : (\r\n            <Spinner color=\"dark\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TableComponent);\r\n","import React, { Component } from \"react\";\r\nimport TableComponent from \"../components/TableComponent\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUsersList, deleteUserDetail } from \"../actions/userActions\"\r\n\r\nclass HomeContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(getUsersList());\r\n    this.props.dispatch(deleteUserDetail());\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TableComponent />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(HomeContainer);\r\n","import axios from \"axios\";\r\n\r\nexport const GET_USERS_LIST = \"GET_USERS_LIST\";\r\nexport const GET_USER_DETAIL = \"GET_USER_DETAIL\";\r\nexport const POST_USER_CREATE = \"POST_USER_CREATE\";\r\n\r\nexport const getUsersList = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\"https://my-json-server.typicode.com/yusufnur/react-data/users\")\r\n      .then(function (response) {\r\n        dispatch({\r\n          type: GET_USERS_LIST,\r\n          payload: {\r\n            data: response.data,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: GET_USERS_LIST,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const getUserDetail = (id) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(\r\n        \"https://my-json-server.typicode.com/yusufnur/react-data/users/\" + id\r\n      )\r\n      .then(function (response) {\r\n        dispatch({\r\n          type: GET_USER_DETAIL,\r\n          payload: {\r\n            data: response.data,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: GET_USER_DETAIL,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const postUserCreate = (data) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .post(\r\n         \"http://my-json-server.typicode.com/afifbasya/reactjs-redux/users\",\r\n        data\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n        \r\n        dispatch({\r\n          type: POST_USER_CREATE,\r\n          payload: {\r\n            data: response.data,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: POST_USER_CREATE,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteUserDetail = (id) => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: GET_USER_DETAIL,\r\n      payload: {\r\n        data: false,\r\n        errorMessage: false,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Row, Col, Button } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const BackComponent = () => {\r\n  return (\r\n    <Row className=\"mb-2\">\r\n      <Col>\r\n        <Link to=\"/\">\r\n          <Button color=\"dark\">\r\n            <FontAwesomeIcon icon={faArrowLeft} /> Back\r\n          </Button>\r\n        </Link>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n","const UserValidation = (values) => {\r\n  const errors = {};\r\n\r\n  if (!values.nama || values.nama === \"\") {\r\n    errors.nama = \"Nama harus diisi\";\r\n  }\r\n\r\n  if (!values.umur || values.umur === \"\") {\r\n    errors.umur = \"Umur harus diisi\";\r\n  }\r\n\r\n  if (!values.alamat || values.alamat === \"\") {\r\n    errors.alamat = \"Alamat harus diisi\";\r\n  }\r\n\r\n  if (!values.nohp || values.nohp === \"\") {\r\n    errors.nohp = \"No HP harus diisi\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default UserValidation;\r\n","import React, { Component } from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { FormGroup, Col, Label, Input, Row, Button } from \"reactstrap\";\r\nimport UserValidation from \"../validations/UserValidation\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  type,\r\n  placeholder,\r\n  label,\r\n  disabled,\r\n  readOnly,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <Row>\r\n    <Col md=\"12\">\r\n      <Label htmlFor=\"{input}\" className=\"col-form-label\">\r\n        {label}\r\n      </Label>\r\n    </Col>\r\n    <Col md=\"12\">\r\n      <Input\r\n        {...input}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        disabled={disabled}\r\n        readOnly={readOnly}\r\n      ></Input>\r\n      {touched &&\r\n        ((error && <p style={{ color: \"red\" }}>{error}</p>) ||\r\n          (warning && <p style={{ color: \"brown\" }}>{warning}</p>))}\r\n    </Col>\r\n  </Row>\r\n);\r\n\r\nclass FormComponent extends Component {\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.props.handleSubmit}>\r\n        <FormGroup row>\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"nama\"\r\n                component={renderField}\r\n                label=\"Nama :\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"alamat\"\r\n                component={renderField}\r\n                label=\"Alamat :\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"nohp\"\r\n                component={renderField}\r\n                label=\"No HP :\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n\r\n          <Col md={6}>\r\n            <FormGroup>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"umur\"\r\n                component={renderField}\r\n                label=\"Umur :\"\r\n              />\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup>\r\n\r\n        <FormGroup row>\r\n          <Col md=\"12\">\r\n            <FormGroup>\r\n              <Button\r\n                color=\"dark\"\r\n                type=\"submit\"\r\n                disabled={this.props.submitting}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nFormComponent = reduxForm({\r\n  form: \"formCreateUser\",\r\n  validate: UserValidation,\r\n  enableReinitialize: true,\r\n})(FormComponent);\r\n\r\nexport default connect()(FormComponent);\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { BackComponent } from \"../components/BackComponent\";\r\nimport FormComponent from \"../components/FormComponent\";\r\nimport { connect } from \"react-redux\";\r\nimport { postUserCreate } from \"../actions/userActions\";\r\n\r\nclass CreateUserContainer extends Component {\r\n  handleSubmit(data) {\r\n    this.props.dispatch(postUserCreate(data));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <BackComponent />\r\n        <h1>Createuser</h1>\r\n        <FormComponent onSubmit={(data) => this.handleSubmit(data)} />\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(CreateUserContainer);\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { BackComponent } from \"../components/BackComponent\";\r\n\r\nexport default class EditUserContainer extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <BackComponent/>\r\n        <h1>EditUser</h1>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Table } from \"reactstrap\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getUserDetail: state.users.getUserDetail,\r\n    errorUserDetail: state.users.errorUserDetail,\r\n  };\r\n};\r\n\r\nconst DetailUserComponent = (props) => {\r\n  return (\r\n    <Table striped>\r\n      <tbody>\r\n        <tr>\r\n          <td width=\"200\">Nama</td>\r\n          <td width=\"10\">:</td>\r\n          <td>{props.getUserDetail.nama}</td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"200\">Alamat</td>\r\n          <td width=\"10\">:</td>\r\n          <td>{props.getUserDetail.alamat}</td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"200\">Umur</td>\r\n          <td width=\"10\">:</td>\r\n          <td>{props.getUserDetail.umur}</td>\r\n        </tr>\r\n        <tr>\r\n          <td width=\"200\">No HP</td>\r\n          <td width=\"10\">:</td>\r\n          <td>{props.getUserDetail.nohp}</td>\r\n        </tr>\r\n      </tbody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(DetailUserComponent);\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { BackComponent } from \"../components/BackComponent\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserDetail } from \"../actions/userActions\";\r\nimport DetailUserComponent from \"../components/DetailUserComponent\";\r\n\r\nclass DetailUserContainer extends Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(getUserDetail(this.props.match.params.id));\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <BackComponent />\r\n        <h1>DetailUser</h1>\r\n        <DetailUserComponent/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(DetailUserContainer);\r\n","import React, { Component } from \"react\";\nimport NavbarComponent from \"./components/NavbarComponent\";\nimport JumbotronComponent from \"./components/JumbotronComponent\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport HomeContainer from \"./containers/HomeContainer\";\nimport CreateUserContainer from \"./containers/CreateUserContainer\";\nimport EditUserContainer from \"./containers/EditUserContainer\";\nimport DetailUserContainer from \"./containers/DetailUserContainer\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <NavbarComponent />\n        <JumbotronComponent />\n        <BrowserRouter>\n          <Route path=\"/react-deploy\" exact component={HomeContainer} />\n\n          <Route path=\"/create\" exact component={CreateUserContainer} />\n\n          <Route path=\"/detail/:id\" exact component={DetailUserContainer} />\n\n          <Route path=\"/edit/:id\" exact component={EditUserContainer} />\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  GET_USERS_LIST,\r\n  GET_USER_DETAIL,\r\n  POST_USER_CREATE,\r\n} from \"../actions/userActions\";\r\n\r\nlet initialState = {\r\n  getUsersList: false,\r\n  errorUsersList: false,\r\n  getUserDetail: false,\r\n  errorUserDetail: false,\r\n  getResponDataUser: false,\r\n  errorResponDataUser: false,\r\n};\r\n\r\nconst users = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_USERS_LIST:\r\n      return {\r\n        ...state,\r\n        getUsersList: action.payload.data,\r\n        errorUsersList: action.payload.errorMessage,\r\n      };\r\n    case GET_USER_DETAIL:\r\n      return {\r\n        ...state,\r\n        getUserDetail: action.payload.data,\r\n        errorUserDetail: action.payload.errorMessage,\r\n      };\r\n    case POST_USER_CREATE:\r\n      return {\r\n        ...state,\r\n        getResponDataUser: action.payload.data,\r\n        errorResponDataUser: action.payload.errorMessage,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default users;\r\n","import { combineReducers } from 'redux'\r\nimport users from './users'\r\nimport { reducer as formReducer } from 'redux-form'\r\n\r\nexport default combineReducers({\r\n    users,\r\n    form: formReducer\r\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nconst store = createStore(reducer, compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}